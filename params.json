{"name":"tiny-worker","tagline":"Tiny WebWorker for the Server","body":"# tiny-worker\r\nTiny WebWorker for Server\r\n\r\n[![build status](https://secure.travis-ci.org/avoidwork/tiny-worker.svg)](http://travis-ci.org/avoidwork/tiny-worker)\r\n\r\n## Example\r\n#### Creating a Worker from a file\r\nThe worker script:\r\n```javascript\r\nself.onmessage = function (ev) {\r\n\tpostMessage(ev.data);\r\n};\r\n```\r\n\r\nThe core script:\r\n```javascript\r\nvar Worker = require(\"tiny-worker\");\r\nvar worker = new Worker(\"repeat.js\");\r\n\r\nworker.onmessage = function (ev) {\r\n\tconsole.log(ev.data);\r\n\tworker.terminate();\r\n};\r\n\r\nworker.postMessage(\"Hello World!\");\r\n```\r\n\r\n#### Creating a Worker from a Function\r\n```javascript\r\nvar Worker = require(\"tiny-worker\");\r\nvar worker = new Worker(function () {\r\n\tself.onmessage = function (ev) {\r\n\t\tpostMessage(ev.data);\r\n\t};\r\n});\r\n\r\nworker.onmessage = function (ev) {\r\n\tconsole.log(ev.data);\r\n\tworker.terminate();\r\n};\r\n\r\nworker.postMessage(\"Hello World!\");\r\n```\r\n\r\n## Properties\r\n#### onmessage\r\nMessage handler, accepts an `Event`\r\n\r\n#### onerror\r\nError handler, accepts an `Event`\r\n\r\n## API\r\n#### addEventListener(event, fn)\r\nAdds an event listener\r\n\r\n#### close()\r\nTerminates the `Worker`, same as `terminate()`\r\n\r\n#### postMessage()\r\nBroadcasts a message to the `Worker`\r\n\r\n#### terminate()\r\nTerminates the `Worker`\r\n\r\n## License\r\nCopyright (c) 2015 Jason Mulligan\r\nLicensed under the BSD-3 license\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}